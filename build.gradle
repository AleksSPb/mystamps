
apply plugin: 'java'

version = '0.2-SNAPSHOT'
buildDir = file('target')
sourceCompatibility = 1.6
targetCompatibility = 1.6

apply plugin: 'war'

apply plugin: 'jetty'

// TODO: only in test environment
jettyRun.overrideWebXml = file('src/main/config/test-override-web.xml')
jettyRunWar.overrideWebXml = file('src/main/config/test-override-web.xml')

processResources {
	ant.loadproperties(
		srcFile: file('src/main/resources/test/spring/test-data.properties')
	)
	filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ant.properties)
}

repositories {
	mavenCentral()
}

dependencies {
	
	// HTTP
	providedCompile 'org.mortbay.jetty:servlet-api:3.0.20100224'
	
	// logging
	compile 'org.slf4j:slf4j-api:1.7.2'
	
	// DI
	compile 'javax.inject:javax.inject:1' // for @Inject
	
	// validation
	compile 'javax.validation:validation-api:1.1.0.Alpha1'
	compile 'org.hibernate:hibernate-validator:5.0.0.Alpha1'
	
	// DB
	compile 'commons-dbcp:commons-dbcp:1.4' // used only in dev environment
	runtime 'mysql:mysql-connector-java:5.1.21' // used only in dev environment
	runtime 'com.h2database:h2:1.3.170' // used only in test environment
	
	// JPA
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
	def hibernateVersion = '4.1.11.Final'
	compile 'org.hibernate:hibernate-core:' + hibernateVersion // required in compile scope due to its usage in MySQL5InnoDBDialect
	runtime 'org.hibernate:hibernate-entitymanager:' + hibernateVersion
	
	// Spring
	def springVersion = '3.2.2.RELEASE'
	compile 'org.springframework:spring-tx:' + springVersion // for @Transactional
	compile 'org.springframework:spring-web:' + springVersion // for MultipartFile
	compile 'org.springframework:spring-webmvc:' + springVersion
	compile 'org.springframework:spring-orm:' + springVersion // for JpaTransactionManager
	compile 'org.springframework:spring-jdbc:' + springVersion // used only in test environment
	
	// Spring Data
	compile 'org.springframework.data:spring-data-commons:1.5.0.RELEASE' // for CrudRepository
	compile 'org.springframework.data:spring-data-jpa:1.3.0.RELEASE' // for @EnableJpaRepositories
	
	// Spring Security
	def springSecurityVersion = '3.1.3.RELEASE'
	compile 'org.springframework.security:spring-security-core:' + springSecurityVersion // for PasswordEncoder
	compile 'org.springframework.security:spring-security-web:' + springSecurityVersion
	runtime 'org.springframework.security:spring-security-config:' + springSecurityVersion
	
	// utils
	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'commons-beanutils:commons-beanutils:1.8.3'
	
	// misc
	providedCompile 'org.projectlombok:lombok:0.11.6'
	
	// test
	testCompile 'junit:junit:4.10'
	testCompile 'org.testng:testng:6.7'
	testCompile 'org.mockito:mockito-core:1.9.5'
	testCompile 'org.easytesting:fest-assert-core:2.0M8'
	testCompile 'org.seleniumhq.selenium:selenium-java:2.30.0'
	testCompile 'org.powermock:powermock-api-mockito:1.5'
	testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.5' // for PowerMockRule
	testCompile 'org.springframework:spring-test:' + springVersion
	
}

